hydra:
  help:
    app_name: ${hydra.job.name}
    footer: 'Powered by Hydra (https://hydra.cc)

      Use --hydra-help to view Hydra specific help

      '
    header: '${hydra.help.app_name} is powered by Hydra.

      '
    template: '${hydra.help.header}

      == Configuration groups ==

      Compose your configuration from those groups (group=option)


      $APP_CONFIG_GROUPS


      == Config ==

      Override anything in the config (foo.bar=value)


      $CONFIG


      ${hydra.help.footer}

      '
  hydra_help:
    template: 'Hydra (${hydra.runtime.version})

      See https://hydra.cc for more info.


      == Flags ==

      $FLAGS_HELP


      == Configuration groups ==

      Compose your configuration from those groups (For example, append hydra/job_logging=disabled
      to command line)


      $HYDRA_CONFIG_GROUPS


      Use ''--cfg hydra'' to Show the Hydra config.'
  hydra_logging:
    disable_existing_loggers: false
    formatters:
      colorlog:
        (): colorlog.ColoredFormatter
        format: '[%(cyan)s%(asctime)s%(reset)s][%(purple)sHYDRA%(reset)s] %(message)s'
    handlers:
      console:
        class: logging.StreamHandler
        formatter: colorlog
        stream: ext://sys.stderr
    root:
      handlers:
      - console
      level: INFO
    version: 1
  job:
    config:
      override_dirname:
        exclude_keys:
        - hydra.job_logging.handles.file.filename
        - dset.train
        - dset.valid
        - dset.test
        - dset.noisy_json
        - dset.noisy_dir
        - num_prints
        - continue_from
        - save_again
        - device
        - num_workers
        - print_freq
        - restart
        - verbose
        - log
        - ddp
        - ddp_backend
        - rendezvous_file
        - rank
        - world_size
        item_sep: ','
        kv_sep: '='
    config_file: config.yaml
    id: ???
    name: train
    num: ???
    override_dirname: ''
  job_logging:
    disable_existing_loggers: false
    formatters:
      colorlog:
        (): colorlog.ColoredFormatter
        format: '[%(cyan)s%(asctime)s%(reset)s][%(blue)s%(name)s%(reset)s][%(log_color)s%(levelname)s%(reset)s]
          - %(message)s'
        log_colors:
          CRITICAL: red
          DEBUG: purple
          ERROR: red
          INFO: green
          WARNING: yellow
      simple:
        format: '[%(asctime)s][%(name)s][%(levelname)s] - %(message)s'
    handlers:
      console:
        class: logging.StreamHandler
        formatter: colorlog
        stream: ext://sys.stderr
      file:
        class: logging.FileHandler
        filename: trainer.log
        formatter: colorlog
        mode: w
    root:
      handlers:
      - console
      - file
      level: INFO
    version: 1
  launcher:
    class: hydra._internal.core_plugins.basic_launcher.BasicLauncher
  output_subdir: .hydra
  overrides:
    hydra: []
    task: []
  run:
    dir: ./outputs/exp_${hydra.job.override_dirname}
  runtime:
    cwd: /Users/levenson/SpeechDenoising/denoiser
    version: 0.11.3
  sweep:
    dir: multirun/${now:%Y-%m-%d}/${now:%H-%M-%S}
    subdir: ${hydra.job.num}
  sweeper:
    class: hydra._internal.core_plugins.basic_sweeper.BasicSweeper
  verbose: false
